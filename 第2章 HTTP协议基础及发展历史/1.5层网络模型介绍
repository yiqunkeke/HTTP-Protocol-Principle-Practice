网络协议分层

先介绍网络通讯相关的知识和概念的讲解。对于网络协议整体上的一个认识。
有利于更好的理解HTTP协议以及一些内容。

. 经典五层模型

    
    应用层   --> HTTP，FTP...  

    传输层   --> TCP，UDP

    网络层

    数据链路层

    物理层



    这个在每一台电脑或者每一台服务器上都是这样的层级关系来维护数据传输的过程。
    所以在你自己的电脑上和在一台远程物理服务器上（可能上面放着一个web服务器，来提供一个网站的服务），
    这些经典的计算机模型，都会有这样一个网络传输的过程。
    所以你自己的计算机也可以作为一台web服务器来提供网络服务。

    这里主要讲解应用层，也会提及传输层。会忽略下面3层。
    因为HTTP协议要基于传输层中的一个协议叫TCP/IP协议。这个协议是现在网络模型中最重要的协议。
    比如我们创建一个HTTP的服务，或者是FTP服务，或者是email的服务，这些服务它们都是基于TCP/IP协议来实现的。
    所以TCP/IP协议，在后面会讲解到一部分。因为它会涉及到请求的性能或者过程的消耗。


    下面的3层，因为我们做的主要是web服务，所以基本不会涉及到下面3层相关的东西。


. 低三层
    .物理层主要作用是定义物理设备如何传输数据
    简单来说，物理层就是我们电脑的硬件-网卡端口、网线、以及光缆为我们把数据传输到互联网。然后经过好几千公里，把数据传输到对面的服务器上面。
    物理是一定要有的。如果没有物理，我们的软件是没有办法使用的。
    总结：物理层就是一些硬件设备相关的东西。

    .数据链路层在通信的实体间建立数据链路连接
    怎么理解呢？物理是可以把两台机器连接在一起的。
    但也要有一个软件服务通过物理设备帮我们去创建一个电路的连接。这两边可以去传输数据。0101010101

    .网络层为数据在结点之间传输创建逻辑链路
    逻辑链路会包含一些，比如我们从自己的电脑访问百度服务器，我们如何去寻找百度服务器所在的地址。
    它就是一个逻辑关系，这个关系是在网络层为我们创建的。

    这3层如果不是特别理解也没有关系，因为这3层是比较底层的。如果有兴趣可以去了解，如果不了解，也不会影响你做好一个web应用。


. 传输层
    主要有两个协议，一个是TCP/IP协议，一个是UDP协议。
    在更多情况下，我们使用的是TCP/IP协议，因为它是一个更可靠的协议帮我们去传输数据。

    .向用户提供可靠的端到端（End-to-End）服务。
    这个服务是什么概念呢？就是我们建立起了从自己的电脑到百度服务器的连接之后，
    它们两端如何去传输数据，传输数据的方式都是在这一层进行定义的。
    传输的数据有可能很小，也有可能很大，如果很大，我们不能一次性传输过去，那么我们就要分包，分片，
    传过去之后，又要进行组装。
    那么如何去组装，如何去传输，都是在传输层进行定义的。

    .传输层向高层屏蔽了下层数据通信的细节。
    因为HTTP协议的实现是基于TCP/IP协议的。

        . HTTP协议要传输一个数据，只需要非常简单的在浏览器中输入一个url，它就会自动发送相关的数据到服务器端，
          然后服务器端能够解析这些数据，返回给浏览器，然后把页面显示出来。
          那么我们输入url这个过程，其实是涉及到了一系列的数据的拼装以及去传输，这个过程我们作为浏览器端，作为用户或者说
          我们作为网页的开发者不需要知道它里面到底是怎么分片，怎么去跟服务器创建一个连接的关系。这些内容我们完全是不需要知道的。
          这些是传输层帮我们封装掉的。

        . 还有就是比如我们创建一个ajax请求，ajax请求也一个http的请求，我们使用ajax的post去传输一些数据，这些数据如果是比较大的时候，
          它也是一次性传输不完的，这时候，它如何去进行传输，如何可靠的把我们想要信息传输到服务器，服务器返回的信息又如何可靠的被我们拿到，
          这个过程都是传输层已经帮我们实现掉的。
          
          所以我们的HTTP协议层是不需要关心的。

          虽然说不需要关心，但是如果你能更好的理解传输层它的一个传输的过程，
          可能对于在某些细节上实现性能更高的HTTP协议的使用方式，可能会有非常大的帮助。

. 应用层
    .为应用软件提供了很多服务
    .构建于TCP协议之上
    .屏蔽了网络传输相关细节











