 Redirect            App cache           DNS               TCP               Request            Response
   跳转               应用缓存           DNS查找         创建TCP链接           发送请求            接收响应


    这张图是浏览器API里面，有一个叫Performance，这个Performance会帮我们记录所有的时间点。
    HTTP协议时间过程的消耗会通过Performance这个API来记录。
    那么对于我们开发者来说，我们就可以知道哪个节点它的耗时特别长，则可以去优化它。

    .Redirect
    为什么一开始就需要Redirect呢？
    因为浏览器可能记录了你的地址

    .第二步需要看缓存。
        因为你请求的这个资源可能已经缓存过了，所以我们要去App Cache里面是否有。
        如果没有被缓存，则需要去实际的服务器那边去请求资源了。

    .第三步DNS   
        因为我们输入的是域名，域名需要对应成真正的IP地址之后才能真正的访问到服务器，所以我们需要先去查找域名对应的一个IP地址。这叫DNS解析。
        
    .第四步创建TCP链接
        有了IP之后，就要经过TCP的三次握手，真正的把TCP连接创建起来。 
        如果这个链接是HTTPS的，则它跟三次握手又不一样。  
    .TCP链接创建好之后，才开始真正发送HTTP请求的数据包。    
    .请求的数据包发送完之后，服务器接收到这个数据包，进行数据操作后，返回我们想要的内容，就开始返回数据。也就是响应

 以上就是关于数据加载的过程所会经历的每个节点。
 学完之后，你就知道在哪个节点可以进行优化。让HTTP服务做的更好。


